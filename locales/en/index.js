export default {
  lang: "En",
  allDataTableText: "Rows per page:",
  noDataText: "No data available",
  from: "From",
  to: "To",
  update: "Update",
  enter: "Enter",
  save: "Save",
  autoFilling: "Aut.Filling",
  history: "History",
  edit: "Edit",
  total: "Total",

  historyTable: {
    toProcess: "To process",
    date: "Date",
    doneBy: "Done by",
  },

  sidebar: {
    ok: "OK",
    byModels:"By Model",
    catalogs:"Catalogs",
    setting: "Settings",
    report: "Report",
    warehouse: "Warehouse",
    shipping: "Shipping",
    dashboard: "Dashboard",
    analytics: "Analytics",
    usermanagement: "User management",
    localization: "Localization",
    calculations: "Calculations",
    fraudManagement: "Fraud management",
    devices: "Devices",
    users: "Users",
    accessControl: "Access control",
    permission: "Permission",
    role: "Role",
    billing: "Billing",
    company: "Company",
    lists: "Lists",
    model: "Models",
    catalog: "Catalogs",
    orders: "Orders",
    partnersType: "Partners type",
    boxSize: "Box Size",
    modelGroups: "Model categories",
    samplePurposes: "Sample purposes",
    bodyParts: "Body Parts",
    cooperationType: "Cooperation type",
    expenseGroup: "Expense Group",
    measurementUnit: "Measurement Unit",
    packageShape: "Package type",
    fabricCatalogs: "Fabric catalogs",
    productCatalogs: "Product catalogs",
    catalogGroups: "Catalog Groups",
    partners: "Partners",
    sizeTemplate: "Size",
    canvasType: "Fabric Type",
    colors: "Colors",
    accessoryType: "Accessory Type",
    composition: "Composition",
    printType: "Artwork",
    process: "Process",
    accessory: "Accessories",
    planning: "Planning",
    fabric: "Fabric",
    fabricOrdering: "Fabric ordering",
    forms: "Forms",
    samples: "Samples",
    fabricWarehouse: "Fabric warehouse",
    accessoryWarehouse: "Accessory warehouse",
    finishedProducts: "Ready garment warehouse",
    wastesWarehouse: "Wastes warehouse",
    supplyWarehouse: "Supply warehouse",
    secondaryWarehouse: "Secondary warehouse",
    production: "Production",
    planningOfProduction: "Planning of production",
    workingOperations: "Working operations",
    yarnNumbers: "Yarn ",
    composition: "Composition",
    notification: "Notification",
    fabricRework: "Garment rework",
    inspection: "Final inspection",
    ppg: "PPG",
    centralWarehouse: "Central warehouse",
    department: "Production departments",
    bankDetails:"Bank details",
    listOfWorkers:"Employee list",
    modelOperations: "Model Operations",
    monthlySalary: "Salary",
  },
  appBar: {
    search: "Search",
    pSearch: "search...",
  },
  userManagement: {
    child: {
      delete: "Delete",
      edit: "Edit",
      photo: "Photo",
      username: "Username",
      lang: "Lang",
      lastName: "Last Name",
      eMail: "E-mail",
      registeredDate: "Registered date",
      firstName: "First name",
      phoneNumber: "Phone number",
      status: "Status",
      save: "Save",
      home: "Home",
      userManagement: "User-management",
      details: "Details",
      update: "Update password",
      password: "New password",
    },
    dialog: {
      userId: "User ID",
      firstName: "First name",
      lastName: "Last name",
      reset: "Reset",
      search: "Search",
      users: "Users",
      user: "user",
      details: "Details",
      copy: "Copy",
      deleteDialog: "Delete User information",
      deleteText: "Are you sure you want to Delete this user information?",
      cancel: "cancel",
      delete: "Delete",
      save: "save",
      addUser: "Add user",
      uploadPhoto: "Upload photo",
      userName: "Username",
      enterUsername: "Enter username",
      enterFirstName: "Enter First Name",
      enterLastName: "Enter Last name",
      phoneNumber: "Phone number",
      eMail: "E-mail",
      entereMail: "Enter e-mail",
      gender: "Gender",
      selectGender: "Select gender",
      add: "Add",
      editUser: "Edit user",
      userManagement: "User management",
    },
    table: {
      email: "Email",
      userName: "Username",
      firstName: "First Name",
      lastName: "Last Name",
      phoneNumber: "Phone number",
      updateAt: "Update at",
      lang: "Lang",
      status: "Status",
      actions: "Actions",
    },
  },
  localization: {
    dialog: {
      key: "Key",
      placeholderKey: "Enter key",
      message: "Message",
      reset: "Reset",
      search: "Search",
      localization: "Localization",
      addLocalization: "Add localization",
      messageContent: "Message content",
      cancel: "Cancel",
      add: "Add",
      editLocalization: "Edit localization",
      language: "Language",
      save: "Save",
      deleteDilaog: "Delete Localization",
      deletetext: "Are you sure you want to Delete this user information?",
      delete: "delete",
    },
    table: {
      lang: "Lang",
      key: "Key",
      message: "Message",
      updatedAt: "Updated At",
      actions: "Actions",
    },
  },
  prefinances: {
    child: {
      prefinance: "prefinance",
      clear: "clear",
      edit: "Edit",
      prefinanceNumber: "Prefinance number",
      enterPrefinanceNumber: "Enter prefinance number",
      modelNumber: "Model number",
      enterModelNumber: "Enter model number",
      modelName: "Model name",
      enterModelName: "Enter Model name",
      partner: "Partner",
      partnerNamePhone: "Partner name or phone",
      primaryCurrency: "Primary Currency",
      secondaryCurrency: "Secondary Currency",
      tertiaryCurrency: "Tertiary Currency",
      permission: "Permission",
      primaryRare: "Primary Rare",
      secondaryRate: "Secondary Rate",
      tertiaryRate: "Tertiary Rate",
      description: "Description",
      enterDescription: "Enter description",
      owner: "Owner",
      enterOwner: "Enter Owner",
      createdTime: "Created time",
      modifiedPerson: "Modified person",
      enterModifiedPerson: "Enter Modified person",
      updatedTime: "Updated time",
      save: "save",
      details: "Details",
      delete: "Delete",
      totalPrice: "Total price",
      documents: "Documents",
      download: "Download",
      photosModels: "Photos of models",
      calculations: "Calculations",
      create: "Create",
      newDetails: "New details",
      editDetails: "Edit details",
      updateBtn: "Update",
      expenseGroup: "Expense group",
      expense: "Expense",
      quantity: "Quantity",
      measurementunit: "Measurement unit",
      pricePerUnit: "Price per unit",
      cancel: "cancel",
      home: "Home",
      prefinances: "Prefinances",
      name: "Name",
      detailsHeaders: {
        expenseGroup: "Expense group",
        expense: "Expense",
        expenseDescription: "Expense type description",
        quantity: "Quantity",
        measurementUnit: "Measurement unit",
        currency: "Currency",
        priceUnit: "Price per unit",
        price: "Price",
      },
      documentsHeaders: {
        type: "Type",
        documentName: "Document name",
        owner: "Owner",
        date: "Date",
        actions: "Actions",
      },
    },
    dialog: {
      refinanceNumber: "Calculation №",
      modelN: "Model №",
      partner: "Client",
      reset: "Reset",
      search: "Search",
      prefinance: "Prefinance",
      prefinances: "Prefinances",
      edit: "Edit",
    },
    table: {
      prefinanceNumber: "Prefinance number",
      modelN: "Model №",
      partner: "Partner",
      price: "Price",
      currency: "Currency",
      status: "Status",
      actions: "Actions",
    },
  },
  fraudDevices: {
    child: {
      delete: "Delete",
      edit: "Edit",
      deviceId: "Device ID",
      status: "Status",
      reason: "Reason",
      deviceN: "Device №",
      blockedTime: "Blocked date time",
      deviceType: "Device type",
      blockedBy: "Blocked by",
      unblockedTime: "Unblocked date time",
      save: "Save",
      home: "Home",
      devices: "Devices",
      details: "Details",
    },
    dialog: {
      deviceId: "Device ID",
      deviceN: "Device №",
      status: "Status",
      blockedDateTime: "Blocked date time",
      reset: "Reset",
      search: "Search",
      devices: "Devices",
      fraudManagement: "Fraud management",
    },
    table: {
      deviceId: "Device ID",
      deviceN: "Device №",
      blockedBy: "Blocked by",
      deviceType: "Device type",
      blockedDate: "Blocked date",
      unblockedDate: "Unblocked date",
      status: "Status",
    },
  },
  fraudUsers: {
    child: {
      delete: "Delete",
      edit: "Edit",
      accountId: "Account ID",
      blockedBy: "Blocked by",
      blockedTime: "Blocked date time",
      unblockedTime: "Unblocked date time",
      status: "Status",
      save: "save",
      home: "Home",
      account: "Account",
      details: "Details",
    },
    dialog: {
      accountId: "Account ID",
      blockedBy: "Blocked by",
      status: "Status",
      blockedTime: "Blocked date time",
      reset: "Reset",
      search: "Search",
      account: "Account",
      fraudManagement: "Fraud management",
    },
    table: {
      accountId: "Account ID",
      blockedBy: "Blocked by",
      period: "Period",
      blockedDate: "Blocked date",
      unblockedDate: "Unblocked date",
      status: "Status",
    },
  },
  permissionControl: {
    dialog: {
      permissionName: "Permission name",
      permissionPath: "Permission path",
      status: "Status",
      reset: "Reset",
      search: "Search",
      permission: "Permission",
      newPermission: "Create Permission",
      enterPermissionName: "Enter permission name",
      description: "Description",
      enterPermissionDescription: "Enter permission description",
      enterPermissionPath: "Enter permission path",
      cancel: "cancel",
      create: "Create",
      editUser: "Edit user",
      selectStatus: "Select status",
      deleteDialog: "Delete Permission",
      deleteText: "Are you sure you want to Delete this permission?",
      delete: "Delete",
    },
    table: {
      permissionName: "Permission name",
      description: "Description",
      path: "Path",
      status: "Status",
      updated: "Updated",
      created: "Created",
      actions: "Actions",
    },
  },
  permissionRole: {
    dialog: {
      roleId: "Role ID",
      roleName: "Role name",
      status: "Status",
      createdAt: "Created",
      reset: "Reset",
      search: "Search",
      role: "Role",
      createRole: "Create Role",
      description: "Description",
      cancel: "cancel",
      create: "create",
      editRole: "Edit Role",
      deleteDialog: "Delete Permission",
      deleteText: "Are you sure you want to Delete this permission?",
      delete: "delete",
      accessControl: "Access control",
    },
    table: {
      roleName: "Role name",
      description: "Description",
      status: "Status",
      created: "Created",
      updated: "Updated",
      actions: "Actions",
    },
  },
  billingCompany: {
    addBilling: {
      billingInfo: "Billing info",
      generateLicence: "Generate licence",
      previewInvoicen: "Preview invoicen",
      printInvoice: "Print invoice",
      cancel: "Cancel",
      next: "Next",
      home: "Home",
      billingCompany: "Billing company",
      addBilling: "Add billing",
    },
    child: {
      delete: "Delete",
      edit: "Edit",
      companyId: "Company ID",
      eMail: "E-mail",
      companyName: "Company name",
      phoneNumber: "Phone number",
      created: "Created",
      owner: "Owner",
      updated: "Updated",
      billing: "billing",
      addBilling: "add billing",
      home: "Home",
      billingCompany: "Billing company",
      details: "Details",
      contractNumber: "Contract number",
      contractDate: "Contract date",
      expireDate: "Expire date",
      users: "Users",
      pricePerQuote: "Price per quote",
      measurementUnit: "Measurement unit",
      discount: "Discount(%)",
    },
    dialog: {
      companyName: "Company name",
      status: "Status",
      createdAt: "Created",
      reset: "Reset",
      search: "Search",
      company: "Company",
      enterCompanyName: "Enter company name",
      addCompany: "add Company",
      copy: "Copy",
      ownerFullname: "Owner fullname",
      enterOwnerName: "Enter owner name",
      eMail: "E-mail",
      entereMail: "Enter e-mail",
      phoneNumber: "Phone number",
      cancel: "Cancel",
      add: "Add",
      billing: "Billing",
    },
    table: {
      companyName: "Company name",
      owner: "Owner",
      phoneNumber: "Phone number",
      created: "Created",
      updated: "Updated",
      status: "Status",
    },
  },
  listsModels: {
    child: {
      models: "Models",
      prefinance: "Prefinance",
      delete: "Delete",
      edit: "Edit",
      modelNumber: "Model number",
      enterModelNumber: "Enter model number",
      partner: "Client",
      selectSeason: "Select season",
      selectClient: "Select client",
      modelName: "Model name",
      season: "Season",
      modelGroup: "Model group",
      selectModelGroup: "Select model group",
      license: "License",
      composition: "Composition",
      entermodelComposition: "Enter model composition",
      gender: "Gender",
      selectGender: "Select gender",
      permission: "Permission",
      description: "Description",
      enterDescription: "Enter description",
      creator: "Creator",
      enterCreator: "Enter Creator",
      modifiedPerson: "Modified person",
      enterModifiedPerson: "Enter Modified person",
      createdTime: "Created time",
      updatedTime: "Updated time",
      save: "save",
      home: "Home",
      addModels: "add models",
      modelParts: "Model parts",
      sizeChart: "Measurement list",
      printing: "Printing",
      documents: "Documents",
      samples: "Samples",
      modelPhoto: "Model photo",
      instruction: "Instruction",
      ordersThisModel: "Orders this model",
    },
    dialog: {
      modelN: "Model №",
      partner: "Client",
      status: "Status",
      reset: "Reset",
      search: "Search",
      models: "Models",
      addModel: "add model",
      lists: "Lists",
    },
    table: {
      modelN: "Model №",
      modelName: "Model name",
      clientName: "Client name",
      composition: "Composition",
      modelGroup: "Model group",
      license: "License",
      order: "Order o/d",
      deadline: "Deadline",
      status: "Status",
      actions: "Actions",
    },
  },

  planningProduction: {
    process: {
      cutting: "Cutting",
      printing: "Printing",
      sewing: "Sewing",
      ironing: "Ironing",
      packaging: "Packaging",
      quality_control: "Quality control",
    },
    workShopType: {
      own: "In-house",
      own_workshop: "In-house",
      subcontractor: "Outsourcing",
      both: "Combined"
    },
    planning: {
      planningProduction: "Planning of production",
      process: "Process",
      workingProcess: "Working process",
      selectWorkingProcess: "Select working process",
      workshop: "Workshop",
      selectWorkshop: "Select workshop",
      contractDate: "Contract date",
      startedDate: "Started date",
      finishedDate: "Finished date",
      fabricColor: "Fabric color",
      selectFabricColor: "Select fabric color",
      quantity: "Quantity",
      currency: "Currency",
      selectCurrency: "Select currency",
      unitPrice: "Unit price",
      comment: "Comment",
      cancel: "cancel",
      workingOperations: "Working operations",
      color: "Color",
      totalPrice: "Total price",
      createdDate: "Created date",
      actions: "Actions",
      nextProcess: "Passing to the next process",
      wastes: "Wastes",
      outputWaybill: "Output to waybill",
      allClassification: "All classification",
      dailyTasks: "Daily tasks",
      passingTab: "Passing to next process",

      sendWaybill: "Send to waybill",
      nextP: "Next process",
    },
    dialog: {
      planningId: "ID planning",
      name: "Name",
      created: "Created",
      update: "Update",
      reset: "Reset",
      search: "Search",
      planningProduction: "Planning of production",
      planning: "Planning",
      details: "Details",
      clear: "clear",
      edit: "edit",
      orderNumber: "Order number",
      searchOrderNumber: "Search by order number",
      modelNumber: "Model number",
      searchModelNumber: "Search by model number",
      modelName: "Model name",
      enterModelName: "Enter model name",
      clientName: "Client name",
      enterClientName: "Enter client name",
      responsiblePerson: "Responsible person",
      enterResponsiblePerson: "Enter responsible person",
      planningCreator: "Planning creator",
      enterPlanningCreator: "Enter planning creator",
      headProduction: "Head of production",
      enterHeadProduction: "Enter head of production",
      orderStatus: "Order status",
      enterOrderStatus: "Enter order status",
      orderOpeningDate: "Order opening date",
      orderClosingDate: "Order closing date",
      enterOrderClosing: "Enter order closing date",
      deadline: "Deadline",
      enterDeadline: "Enter deadline",
      shippingDate: "Shipping date",
      enterShippingDate: "Enter shipping date",
      overproduction: "Overproduction",
      enterOverproduction: "Enter overproduction",
      orderQuantity: "Order quantity",
      productionQuantity: "Production quantity",
      enterProductionQuantity: "Enter production quantity",
      save: "save",
      add: "add",
    },
    table: {
      orderNumber: "Order number",
      modelNumber: "Model number",
      orderQuantity: "Order quantity",
      deadlineProd: "Deadline of prod",
      quantity: "Quantity",
      status: "Status",
      actions: "Actions",
      planningProduction: "Planning of production",
      details: "Details",
    },
  },
  workingProcess: {
    working: {
      workingOperation: "Working Operation",
      addProcessing: "add processing",
      pdfDownload: "PDF Download",
      addWorkingOperations: "Add Working operations",
      total: "Total",
      return: "Return",
      loss: "Loss",
      lossReason: "Loss reason",
      weight: "Weight",
      status: "Status",
      vat: "VAT",
      comment: "Comment",
      cancel: "cancel",
      add: "add",
      editWorkingOperations: "Edit Working operations",
      update: "update",
      deleteDialog: "Delete working operations",
      deleteText: "Are you sure you want to Delete working operations?",
      selectWorkingProcess: "Select working process",
      selectFabricColor: "Select fabric color",
      selectVat: "Select VAT",
      selectLossReason: "Select loss reason",
      selectStatus: "Select Status",
      selectComment: "Select Comment",
    },
    workingTable: {
      amount: "Amount",
      fabricColor: "Fabric Color",
      isVatTexEnabled: "Is VatTex Enabled",
      lostQuantity: "Lost Quantity",
      returnQuantity: "Return Quantity",
      totalAmount: "Total Amount",
      totalQuantity: "Total Quantity",
      unitPrice: "Unit Price",
      unitPriceCurrency: "Unit Price Currency",
      vatTaxPercent: "Vat Tax Percent",
      weight: "Weight",
      actions: "Actions",
    },
    dialog: {
      planningDetails: "Planning Details",
      workingOperations: "Working operations",
      edit: "Edit",
      clear: "clear",
      workingProcess: "Working process",
      processType: "Process type",
      invoiceNumber: "Invoice number",
      workShop: "Workshop",
      contractDate: "Contract date",
      shippingDate: "Shipping date",
      orderNumber: "Order number",
      modelNumber: "Model number",
      modelName: "Model name",
      overProduction: "Overproduction",
      photosModels: "Photos of models",
      save: "save",
      planningProduction: "Planning of production",
      enterWorkingProcessing: "Enter Working Processing",
      enterProcessType: "Enter Process type",
      searchModelNumber: "Search by model number",
      enterWorkshop: "Enter Workshop",
      enterContractDate: "Enter Contract date",
      enterShippingDate: "Enter Shipping date",
      enterOrderNumber: "Enter Order number",
      enterModelNumber: "Enter Model number",
      enterModelName: "Enter Model name",
      enterOverproduction: "Enter Overproduction",
      deleteTitle: "Delete process",
      deleteText: "Are you sure you want to delete this process",
    },
  },

  catalogsPartnerType: {
    child: {
      idPartnerType: "ID partner type",
      namePartnerType: "Name partner type",
      created: "Created",
      updated: "Updated",
      reset: "Reset",
      search: "Search",
    },
    table: {
      id: "ID",
      name: "Name",
      description: "Description",
      createdAt: "Created",
      updatedAt: "Updated",
      actions: "Actions",
    },
    dialog: {
      addPartnerType: "add partner type",
      partnerType: "Partner type",
      enterPartnerType: "Enter Partner type",
      description: "Description",
      descriptionPlacholder: "Enter partner type description",
      cancelBtn: "Cancel",
      createBtn: "Create",
      editDialog: "edit partner type",
      editBtn: "Save",
      deleteDialog: "Delete Partner type",
      deleteText: "Are you sure you want to Delete this partner type?",
      deleteBtn: "Delete",
    },
  },

  catalogsModelGroup: {
    child: {
      idPartnerType: "ID model group",
      namePartnerType: "Name model group",
      created: "Created",
      updated: "Updated",
      reset: "Reset",
      search: "Search",
    },
    table: {
      id: "ID",
      name: "Name",
      description: "Description",
      createdAt: "Created ",
      updatedAt: "Updated ",
      actions: "Actions",
    },

    dialog: {
      addModelGroup: "add model group",
      modelGroup: "Model group",
      enterModelGroup: "Model Group",
      description: "Description",
      descriptionPlacholder: "Enter partner type description",
      cancelBtn: "Cancel",
      createBtn: "Create",
      editDialog: "edit model group",
      editBtn: "Save",
      deleteDialog: "Delete Partner type",
      deleteText: "Are you sure you want to Delete this partner type?",
      deleteBtn: "Delete",
    },
  },

  samplePurposes: {
    child: {
      idSearch: "ID sample purpose",
      name: "Name ",
      created: "Created",
      updated: "Updated",
      reset: "Reset",
      search: "Search",
    },

    table: {
      id: "ID",
      name: "Name",
      description: "Description",
      createdAt: "Created ",
      updatedAt: "Updated ",
      actions: "Actions",
      expenses: "Expenses",
    },

    dialog: {
      menuName: "sample purpose",
      addMainName: "Create Sample Purpose",
      name: "Name",
      enterMainName: "Enter name sample purpose",
      description: "Description",
      descriptionPlacholder: "Enter sample purpose description",
      cancelBtn: "Cancel",
      createBtn: "Create",
      editDialog: "edit sample purpose",
      editBtn: "Save",
      deleteDialog: "Delete sample purpose",
      deleteText: "Are you sure you want to Delete this sample purpose?",
      deleteBtn: "Delete",
    },
  },

  deleteTitle: "Delete Item",
  deleteContent: "Are you sure you want to delete this item ?",

  bodyParts: {
    child: {
      idSearch: "ID body parts",
      name: "Name ",
      created: "Created",
      updated: "Updated",
      reset: "Reset",
      search: "Search",
    },

    table: {
      id: "ID",
      name: "Name",
      description: "Description",
      createdAt: "Created ",
      updatedAt: "Updated ",
      actions: "Actions",
    },

    dialog: {
      menuName: "Body parts",
      addMainName: "Create Body Part",
      name: "Name",
      enterMainName: "Enter name body part",
      description: "Description",
      descriptionPlacholder: "Enter body part description",
      cancelBtn: "Cancel",
      createBtn: "Create",
      editDialog: "Edit Body Part",
      editBtn: "Save",
      deleteDialog: "Delete body part",
      deleteText: "Are you sure you want to Delete this body part?",
      deleteBtn: "Delete",
    },
  },

  cooperationType: {
    child: {
      idSearch: "ID cooperation type",
      name: "Name ",
      created: "Created",
      updated: "Updated",
      reset: "Reset",
      search: "Search",
    },

    table: {
      id: "ID",
      name: "Name",
      description: "Description",
      createdAt: "Created ",
      updatedAt: "Updated ",
      actions: "Actions",
    },

    dialog: {
      menuName: "cooperation type",
      addMainName: "Create Cooperation Type",
      name: "Name",
      enterMainName: "Enter name cooperation type",
      description: "Description",
      descriptionPlacholder: "Enter cooperation type description",
      cancelBtn: "Cancel",
      createBtn: "Create",
      editDialog: "Edit cooperation type",
      editBtn: "Save",
      deleteDialog: "Delete cooperation type",
      deleteText: "Are you sure you want to Delete this cooperation type?",
      deleteBtn: "Delete",
    },
  },

  expenseGroup: {
    child: {
      idSearch: "ID Expense group",
      name: "Name ",
      created: "Created",
      updated: "Updated",
      reset: "Reset",
      search: "Search",
    },

    table: {
      id: "ID",
      name: "Name",
      description: "Description",
      createdAt: "Created ",
      updatedAt: "Updated ",
      actions: "Actions",
    },

    dialog: {
      menuName: "Expense group",
      addMainName: "Create Expense group",
      name: "Name",
      enterMainName: "Enter name Expense group",
      description: "Description",
      descriptionPlacholder: "Enter Expense group description",
      cancelBtn: "Cancel",
      createBtn: "Create",
      editDialog: "Edit Expense group",
      editBtn: "Save",
      deleteDialog: "Delete expense group",
      deleteText: "Are you sure you want to Delete this expense group?",
      deleteBtn: "Delete",
      addExpense: "Add expense",
      expense: "Expense",
    },
  },

  measurementUnit: {
    child: {
      idSearch: "ID measurement unit",
      name: "Name ",
      created: "Created",
      updated: "Updated",
      reset: "Reset",
      search: "Search",
    },

    table: {
      id: "ID",
      name: "Name",
      description: "Description",
      createdAt: "Created ",
      updatedAt: "Updated ",
      actions: "Actions",
    },

    dialog: {
      menuName: "measurement unit",
      addMainName: "Create measurement unit",
      name: "Name",
      enterMainName: "Enter name measurement unit",
      description: "Description",
      descriptionPlacholder: "Enter measurement unit description",
      cancelBtn: "Cancel",
      createBtn: "Create",
      editDialog: "Edit measurement unit",
      editBtn: "Save",
      deleteDialog: "Delete measurement unit",
      deleteText: "Are you sure you want to Delete this measurement unit?",
      deleteBtn: "Delete",
    },
  },

  packageType: {
    child: {
      idSearch: "ID package type",
      name: "Name ",
      created: "Created",
      updated: "Updated",
      reset: "Reset",
      search: "Search",
    },

    table: {
      id: "ID",
      name: "Name",
      description: "Description",
      createdAt: "Created ",
      updatedAt: "Updated ",
      actions: "Actions",
    },

    dialog: {
      menuName: "package type",
      addMainName: "Create package type",
      name: "Name",
      enterMainName: "Enter name package type",
      description: "Description",
      descriptionPlacholder: "Enter package type description",
      measurementUnit: "Measurement unit ID",
      measurementUnitText: "Select Measurement unit ID",
      cancelBtn: "Cancel",
      createBtn: "Create",
      editDialog: "Edit package type",
      editBtn: "Save",
      deleteDialog: "Delete package type",
      deleteText: "Are you sure you want to Delete this package type?",
      deleteBtn: "Delete",
    },
  },

  catalogGroups: {
    child: {
      idSearch: "ID catalog group",
      name: "Name ",
      created: "Created",
      updated: "Updated",
      reset: "Reset",
      search: "Search",
      menuName: "catalog groups",
      addMainName: " Catalog group",
    },

    table: {
      id: "ID",
      name: "Group name",
      code: "Group code",
      createdAt: "Created ",
      updatedAt: "Updated ",
      actions: "Actions",
    },

    addPage: {
      home: "home",
      menuName: "catalog groups",
      details: "details",
      secondaryMenu: "Fabric catalogs",
      delete: "delete",
      edit: "edit",
      groupCode: "Catalogs group code",
      enterGroupCode: "Enter catalogs group code",
      groupName: "Catalogs group name",
      enterGroupName: "Enter catalogs group name",
      creator: "Creator",
      enterCreator: "Enter creator",
      created: "Created date",
      enterCreated: "Enter created date",
      updated: "Updated date",

      save: "save",
      canvasType: "Fabric type",
      yarnType: "Yarn type",
      yarnNumber: "Yarn ",
      composition: "Composition",
    },

    tabs: {
      canvasType: "Fabric type",
      yarnType: "Yarn type",
      yarnNumber: "Yarn ",
      composition: "Composition",

      table: {
        id: "ID",
        name: "Name",
        code: "Catalog group code",
        groupName: "Catalog group name",
        description: "Description",
        createdAt: "Created ",
        updatedAt: "Updated ",
        actions: "Actions",
      },
    },

    canvasType: {
      dialogs: {
        createCanvas: "Create Fabric type",
        selectCanvas: "Select Fabric type",
        specification: "Fabric type specification",
        enterSpecification: "Enter Fabric type specification",
        description: "Description",
        enterDescription: "Enter description",
        cancelBtn: "Cancel",
        createBtn: "Create",
        editCanvas: "Edit Fabric type",
        saveBtn: "save",
        deleteDialog: "Delete Fabric type",
        deleteText: "Are you sure you want to Delete this Fabric type?",
        deleteBtn: "Delete",
      },
    },
    yarnType: {
      dialogs: {
        create: "Create Yarn Type",
        select: "Select yarn type",
        specification: "Yarn type specification",
        enterSpecification: "Enter yarn type specification",
        description: "Description",
        enterDescription: "Enter description",
        cancelBtn: "Cancel",
        createBtn: "Create",
        edit: "Edit Yarn type",
        saveBtn: "save",
        deleteDialog: "Delete yarn type",
        deleteText: "Are you sure you want to Delete this yarn type?",
        deleteBtn: "Delete",
      },
    },
    yarnNumber: {
      dialogs: {
        create: "Create Yarn Number",
        select: "Select yarn number",

        description: "Description",
        enterDescription: "Enter description",
        cancelBtn: "Cancel",
        createBtn: "Create",
        edit: "Edit Yarn number",
        saveBtn: "save",
        deleteDialog: "Delete yarn number",
        deleteText: "Are you sure you want to Delete this yarn number?",
        deleteBtn: "Delete",
      },
    },
    composition: {
      dialogs: {
        create: "Create composition",
        select: "Select composition",

        description: "Description",
        enterDescription: "Enter description",
        cancelBtn: "Cancel",
        createBtn: "Create",
        edit: "Edit composition",
        saveBtn: "save",
        deleteDialog: "Delete composition",
        deleteText: "Are you sure you want to Delete this composition?",
        deleteBtn: "Delete",
      },
    },
  },

  partners: {
    child: {
      pNumber: "Phone number",
      pNumberEnter: "Enter phone number",
      pNameEnter: "Enter partner name",
      pName: "Partner name",
      pEmail: "Partner email",
      pEmailEnter: "Enter partner email",
      status: "Status",
      reset: "Reset",
      search: "Search",
    },

    table: {
      mainMenu: "Partners",
      cooperationType: "Cooperation type",
      id: "ID",
      name: "Name",
      address: "Address",
      email: "Email",
      partnerType: "Partner type",
      pNumber: "Phone number",
      status: "status",
      createdAt: "Created",
      updatedAt: "Updated",
      actions: "Actions",
      brandName: "Brand name",
      addBrandName: "Add brand name",
    },

    dialog: {
      enterBrand: "Enter brand name",
      addPartner: "Add partner",
      pName: "Partner name",
      pNameText: "Enter partner name",
      pType: "Partner type",
      pTypeText: "Select partner type",
      pNumber: "Phone number",
      email: "Email",
      emailText: "Enter email",
      addres: "Address",
      addresText: "Enter address",
      contractNumber: "Contract number",
      contractNumberText: "Enter contract number",
      download: "Download",
      created: "Contract date ",
      status: "Status",
      brandName: "Brand name",
      uploadContract: "Upload contract",
      uploadFiles: "Upload Files...",

      create: "Created",
      cancel: "Cancel",

      editPartner: "Edit Partner",
      save: "Save",

      deleteDialog: "Delete Partners",
      deleteText: "Are you sure you want to Delete this partners?",
      delete: "Delete",
    },
  },

  sizeTemplate: {
    child: {
      idSize: "ID size",
      sizeName: "Size name",
      created: "Created",
      Updated: "Updated",
      reset: "reset",
      search: "search",
    },

    table: {
      mainMenu: "size template",
      addSizeTemplate: "Add Size Template",
      id: "ID",
      sizes: "Sizes",
      isTem: "is Template",
      isRoman: "is Roman",
      createdAt: "Created ",
      updatedAt: "Updated ",
      actions: "Actions",
    },

    dialog: {
      addSizeTemp: "Add Size Template",
      roman: "Roman",
      template: "Template",
      sizes: "Sizes",
      selectSize: "Select size",
      addSize: "Add size",
      enterAddsize: "Enter add size",
      cancel: "Cancel",
      enterSizeName: "Enter size name",
      createSize: "Create Size",
      add: "Add",
      sava: "Save",
      deleteDialog: "Delete Size",
      deleteText: "Are you sure you want to Delete this size?",
      delete: "Delete",
    },
  },
  colorsBox: {
    table: {
      color: "Colors",
      colorCode: "Color code",
      colorName: "Color name",
      colorCodeHex: "Color Code Hex",
      pantoneCode: "Pantone code",
      pantoneType: "Pantone Type",
    },

    dialog: {
      addColor: "Add Color",
      entercolorName: "Enter color name",
      entercolorCode: "Enter color code",
      codeApperance: "Code and appearance",
      enterPantoneCode: "Enter Pantone code",
    },
  },
  catalogAccessory: {
    table: {
      IdAccessory: "ID Accessory",
      accessoryName: "Accessory Name",
      specification: "Specification",
      measurementUnit: "Measurement Unit",
      accessoryType: "Accessory Type",
      description: "Description",
    },
    dialog: {
      accessory: "Accessories",
      addAccessory: "Add Accessory",
      nameAccessory: "Name Accessory",
      enterNameAccessory: "Enter Name Accessory",
      addSpecification: "Add Specification",
      enterSpecification: "Enter Specification",
      specifications: "Specifications",
      enterDescription: "Enter Description",
      selectMeasurementUnit: "Select Measurement Unit",
    },
  },
  canvasType: {
    idCanvasType: "ID Fabric type",
  },
  yarnNumber:{
    idYarnNumber:"Yarn ID",


  },

  composition: {
    child: {
      idSearch: "ID composition",
      name: "Composition ",
      created: "Created",
      createdBy: "Created by",
      reset: "Reset",
      search: "Search",
    },

    table: {
      id: "ID",
      name: "Composition",
      description: "Description",
      created: "Created",
      createdBy: "Created by",
      actions: "Actions",
    },

    dialog: {
      menuName: "Composition",
      addMainName: "Create compositon",
      name: "Composition",
      enterMainName: "Enter composition",
      description: "Description",
      descriptionPlacholder: "Description of Composition",
      cancelBtn: "Cancel",
      createBtn: "Save",
      editDialog: "edit composition",
      editBtn: "Update",
      deleteDialog: "Delete composition",
      deleteText: "Are you sure you want to Delete this composition?",
      deleteBtn: "Delete",
    },
  },

  printType: {
    child: {
      idSearch: "ID print type",
      name: "Name ",
      created: "Created",
      createdBy: "Created by",
      reset: "Reset",
      search: "Search",
    },

    table: {
      id: "ID",
      name: "Name",
      description: "Description",
      created: "Created",
      createdBy: "Created by",
      actions: "Actions",
    },

    dialog: {
      menuName: "Print type",
      addMainName: "Create Print type",
      name: "Name",
      enterMainName: "Enter print type name",
      description: "Description",
      descriptionPlacholder: "Enter print type name description",
      cancelBtn: "Cancel",
      createBtn: "Save",
      editDialog: "edit print type",
      editBtn: "Update",
      deleteDialog: "Delete print type",
      deleteText: "Are you sure you want to Delete this print type?",
      deleteBtn: "Delete",
    },
  },
  process: {
    child: {
      idSearch: "ID working process",
      name: "Name ",
      created: "Created",
      createdBy: "Created by",
      reset: "Reset",
      search: "Search",
    },

    table: {
      id: "ID",
      name: "Name",
      description: "Description",
      created: "Created",
      createdBy: "Created by",
      actions: "Actions",
    },

    dialog: {
      menuName: "Working Process",
      addMainName: "Create working process",
      name: "Name",
      enterMainName: "Enter working process name",
      description: "Description",
      descriptionPlacholder: "Enter working process  description",
      cancelBtn: "Cancel",
      createBtn: "Save",
      editDialog: "edit working process",
      editBtn: "Update",
      deleteDialog: "Delete working process",
      deleteText: "Are you sure you want to Delete this working process?",
      deleteBtn: "Delete",
    },
  },
  forms: {
    index: {
      all: "All",
      management: "Management",
      production: "Production",
      cards: {
        subcontractor: "Subcontractor",
        subcontractorPlaceholder: "Enter subcontractor",
        calculations: "Calculations list",
        calculationsSub: "Calculation form for all model",
        placedOrders: "Placed orders",
        placedOrdersSub: "All important informations related to actual orders",
        prints: "Prints",
        printsSub: "Prints list related to all models",
        fabrics: "Ordered fabrics",
        fabricsSub: "Ordered fabrics list to one supplier",
        recievedFabrics: "Recieved fabrics",
        recievedFabricsSub: "Received fabrics list from one supplier",
        orderedFabricsAmount: "Ordered fabrics amount",
        orderedFabricsAmountSub:
          "All ordered fabrics amount of the current models",
        orderedAccessories: "Ordered accessories",
        orderedAccessoriesSub:
          "All ordered accessories list of the current models",
        recievedAccessories: "Recieved accessories",
        recievedAccessoriesSub:
          "All received accessories list of the current models",
        inspectionFiles: "Final inspection files",
        inspectionFilesSub: "Final inspection files of each model",
        shipping: "Shipping",
        shippingSub: "Basic informations about shipped models",
        cutting: "Cutting form",
        cuttingSub: "Cutting information form related to one model",
        sewing: "Sewing form",
        sewingSub: "Sewing information form related to one model",
        productionList: "Production list",
        productionListSub:
          "Production information related to all models of one client",
        productionStatus: "Production status",
        productionStatusSub:
          "Production information with status related to all models of one client",
        dailyProduction: "Daily/Monthly production quantity",
        dailyProductionSub:
          "Daily/monthly/annual production quantity information",
        cuttingSubcontractor: "Cuttings list of subcontractor",
        cuttingSubcontractorSub:
          "Cutting information list related to all models of one subcontractor",
        printingSubcontractor: "Printings list of subcontractor",
        printingSubcontractorSub:
          "Printing information list related to all models of one subcontractor",
        inconmingPrinting: "Inconming from printing subcontractor",
        inconmingPrintingSub:
          "Cutting information list related to one model of one subcontractor",
        sewingSubcontractor: "Sewing list of subcontractor",
        sewingSubcontractorSub:
          "Cutting information list related to one model of one subcontractor",
        inconmingSewing: "Inconming from sewing subcontractor",
        inconmingSewingSub:
          "Cutting information list related to one model of one subcontractor",
      },
    },
    calculationsList: {
      title: "Calculations List",
      clientName: "Client name",
      clientNamePlaceholder: "Client name",
      gender: "Gender",
      genderPlaceholder: "Gender type",
      fromDate: "From date",
      toDate: "To date",
      country: "Country",
      countryPlaceholder: "Country",
      season: "Season",
      seasonPlaceholder: "Season",
      creator: "Created by",
      creatorPlaceholder: "Creator name",
      btnReset: "Reset Filters",
      btnGenerate: "Generate",
      gender_enums: {
        male: "MALE",
        female: "FEMALE",
        boy: "BOY",
        girl: "GIRL",
        unisex: "UNISEX",
      },
      season_enums: {
        spring: "Spring/Summer",
        autumn: "Autumn/Winter",
      },
    },
    placedOrdersBox: {
      orderNumber: "Order Number",
      orderNumberPlaceholder: "Order Number",
      modelNumber: "Model Number",
      modelNumberPlaceholder: "Model Number",
      modelGroup: "Model Group",
      brandName: "Brand name",
      shippingDateFrom: "Shipping date from",
      shippingDateTo: "Shipping date to",
      shippingDate: "Shipping date monthly",
      shippingDateYear: "Shipping date yearly",
      fabricStatus: "Fabric Status",
      accessoryStatus: "Accessory Status",
      modelStatus: "Model Status",
      fromDate:"From date",
      toDate:"To date",
    },
    printBox: {
      title: "Prints",
      printType: "Artwork",
    },
    orderedFabrics: {
      title: "Ordered Fabric from",
      approved: "Approved by",
      sip: "Sip number",
      supplier: "Supplier Name",
      supplierPlaceholder: "Enter partner name",
    },
    recievedFabrics: {
      title: "Recieved fabrics from",
    },
    orderedFabricsAmount: {
      title: "Suppliers form of ordered fabrics",
      status: "Status",
    },
    orderedAccessoryFrom: {
      title: "Ordered Accessory from",
    },
    recievedAccessoryForm: {
      title: "Recieved Accessory from",
    },
    inspectionFiles: {
      title: "Placed orders",
      inspection: "Final inspection file",
      documentName: "Document name",
      description: "Description",
      actions: "Actions",
    },
    shipmentForm: {
      title: "Shipment Form",
      bodyColor: "Body part color",
      bodyColorPlaceholder: "Select model color",
    },
    productionForm: {
      title: "Production Form",
      price: "Price Enabled",
      shippingDate: "Shipping date",
    },
    dailyProductionQuantity: {
      title: "Daily production quantity",
      daily: "Daily production",
      monthly: "Monthly production",
      yearly: "Yearly production",
    },
  },
  modelBox: {
    table: {
      no: "№",
      client: "Client",
      style: " Style",
      category: " Category",
      inspectionDate: "Final inspection date",
      daysLeftFl: "Days left to FI",
      modelCreating: "Model creating",
      priceCalculation: " Price calculation",
      orderForming: "Oreder forming",
      addingPrint: "Adding print",
      fabricStatus: "Fabric status",
      sampleStatus: "Sample status",
      accessoryStatus: "Accessory status",
      cutting: "Cutting",
      printing: "Printing",
      supplyWarehouse: "Supply warehouse",
      sewing: "Sewing",
      packaging: "Packaging",
      readyGarmentWarehouse: "Ready garment warehouse",
      finalInspection: "Final inspection",
      shipment: "Shipment",
    },
    dialog: {
      add: "Add",
      enterPartnerName: "Enter partner name",
      brandName: "Brand name",
      partnerContract:"Partner contract",
      selectPartnerContract:"Select partner contract",
      selectBrandName: "Select brand name",
      fabricName: "Fabric name",
      enterCanvasType: "Enter Fabric type",
      composition: "Composition",
      mainFabricDensity: "Main fabric density",
      density: "Density",
      inspectionDate: "Final inspection date",
      plannedOrderQuality: "Planned order quality",
      enterPlannedOrderQuality: "Enter planned order quality",
      showDetail: "Show detail",
      hideDetail: "Hide detail",
      finishProccess: "Finish proccess",
    },
    modelPartsBox: {
      modelParts: "Model parts",
      addPart: "Add part",
      partName: "Part name",
      yarnNumber: "Yarn",
      canvasType: "Fabric type",
      comment: "Comment",
      creator: "Creator",
      addModelPart: "Add model parts",
      enterBodyPart: "Enter body part",
      enterPartName: "Enter part name",
      enterYarnNumber: "Enter yarn",
      enterCanvasType: "Enter Fabric type",
      enterComposition: "Enter composition",
      enterDescription: "Enter description",
    },
    measurementListBox: {
      measurementList: "Measurement list",
      sizeTemplate: "Size template",
      sizeChart: "Size chart",
      code: "Code",
      sizeName: "Size name",
      gradation: "Gradaion",
      tolerance: "Tolerance",
      shrinked: "Shrinkage",
      comment: "Comment",
      date: "Date",
    },
    printingBox: {
      printing: "Printing",
      photoModel: "Photo of model",
      printType: "Artwork",
      colorQuality: "Color quality",
      printPartnerName: "Print partner name",
      price: "Price",
      currency: "Currency",
      simpleSendDate: "Sample sent date",
    },
    documentBox: {
      document: "Document",
      uploadDocument: "Upload document",
      documentName: "Document name",
      type: "Type",
      uploader: "Uploader",
      clear: "CLEAR",
      save: "SAVE",
      delete: "DELETE",
      addDocument: "Add document",
      selectDocument: "Select document",
      title: "Title",
      enterDocumentName: "Enter document name",
    },
    instruction: {
      generalInstruct: "General instruct",
      sewingInstruct: "Sewing instruct",
      sampleInstruct: "Sample instruct",
      fabricInstruct: "Fabric instruct",
      packagingInstruct: "Packaging instruct",
      accessoryInstruct: "Accessory instruct",
      printInstruct: "Print instruct",
    },
  },
  inspectionBox: {
    clientName: "Client name",
    plannedInspectionDate: "Planned inspection date",
    inspectionDate: "Final inspection date",
    titleDoc: "Title of document",
    model: "Model №",
    clientName: "Client name",
    modelInspection: "Model inspections",
    addInspection: "Add inspection",
  },
  orderBox: {
    index: {
      orderNum: "Order number",
      modelGroup: "Model group",
      printForms: "Print forms",
      placedOrderForm: "Placed orders form",
      addOrder: "Add order",
      deadline: "Deadline",
    },
    add: {
      enterOrderNumber: "Enter order number",
      headProductDep: "Head of production department",
      enterRespPerson: "Enter responsible person",
      overProduct: "Over-production",
      totalWithOver:"Total with over-production",
      enterOverproduction: "Enter over-production",
      priceDiscount: "Price with discount",
      total: "Total",
      orderDate: "Order date",
      orderpriority: "Order priority",
      plannedAccess: "Planned accessory expense for 1 set",
      modeifiedPerson: "Modified person",
      updatedTime: "Updated time",
      updatedAt: "Updated at",
    },
    dialog: {
      colorDist: "Color/Size distribution",
      modelPrints: "Model artworks",
      contract: "Contract",
      detailInfo: "Detail info",
      documents: "Documents",
    },
    colorSize: {
      delete:"Delete Color/Size distribution",
      sure:"Are you sure you want to Delete Color/Size distribution?",
      editColorSize: "Edit color/size",
      supply: "Supply",
      cuttingInfo: "Cutting information",
      addRow: "Add row",
      totalQuantities: "Total quantities",
      artwork: "Artwork (Additional accessiories)",
      create: "Create",
      cencel: "Cancel",
    },
    modelPrint: {
      modelPrints: "Model artworks",
      mainColor: "Main color",
      printPhoto: "Print photo",
      printType: "Artwork",
      colorQuantity: "Color quantity",
      pricePerDesign: "Price per design",
      quantity: "Quantity",
      totalAmount: "Total amount",
      partner: "Partner",
      description: "Description",
      creator: "Creator",
      createdAt: "Created",
      addPrint: "Add Artwork",
      actions: "Actions",
      addModelPrint: "Add Model artworks",
      mainColor: "Main Color",
      colorQuantity: "Color Quantity",
      printType: "Artwork",
      partnerName: "Partner Name",
      price: "Price",
      currency: "Currency",
      finish: "Finish",
      process: "Are you sure you want to complete this process?",
    },
    contractBox: {
      contractNo: "Contract/SA №.",
      contractDate: "Contract/SA date",
      deadline: "Deadline",
      sumOfContract: "Sum of Contract",
      clientCountry: "Client country",
      deliveryCondition: "Delivery condition",
      addContract: "Add Contract",
      save: "Save",
    },
    orderDetail: {
      orderNumber: "Order number",
      enterOrderNumber: "Enter order number",
      deadline: "Deadline",
      season: "Season",
      selectSeason: "Select season",
      responsiblePerson: "Responsible person",
      enterResponsiblePerson: "Enter responsible person",
      prefinanceNumber: "Prefinance number",
      enterPrefinanceNumber: "Enter prefinance number",
      modelGroup: "Model group",
      selectOrderGroup: "Select Order group",
    },
  },
  planning: {
    index: {
      modelId: "Model ID",
      orderId: "Order ID",
      updated: "Updated",
      fabric: "Fabric",
    },
    id: {
      orderNumber: "Order number",
      enterOrderNumber: "Enter order number",
      clientName: "Client name",
      enterClientName: "Enter client name...",
      deadlineForFabric: "Deadline for fabric",
      deadlineForFabricPlaceholder: "Deadline for fabric",
      createdTime: "Created time",
      createdTimeFormat: "dd.MM.yyyy HH:mm:ss",
      modelNumber: "Model number",
      enterModelNumber: "Enter model number...",
      orderPriority: "Order priority",
      orderPriorityDefault: "0",
      creatorOfPlanning: "Creator of planning",
      enterDeadlineForFabric: "Enter deadline for fabric",
      creatorOfOrder: "Creator of order",
      enterModifiedPerson: "Enter modified person",
      modelName: "Model name",
      enterModelName: "Enter model name",
      deadlineOfOrder: "Deadline of order",
      enterDeadlineOfOrder: "Enter deadline of order",
      headOfProductionDepartment: "Head of production department",
      enterHeadOfProductionDepartment: "Enter head of production department...",
      actualShippingDate: "Actual shipping date",
      enterActualShippingDate: "Enter actual shipping date",
      creatorOfModel: "Creator of model",
      enterCreateOfModel: "Enter create of model",
    },
    planningChart: {
      fabricPlanningChart: "Fabric planning chart",
      part: "Part",
      fabricSpecification: "Fabric specification",
      fleece: "Fleece",
      peachEffect: "Peach effect",
      quantity: "Quantity",
      widthType: "Width type",
      widthCm: "Width (cm)",
      densityGrM2: "Density gr/m²",
      addRow: "Add Row",
      actions: "Actions",
      listOfFabrics: "List of fabrics",
      plannedFabricOrder: "Planned fabric order",
      modelPart: "Model part",
      fabricPlanning: "Fabric planning",
    },
    listFabric: {
      listOfFabrics: "List of fabrics to be ordered",
      plannedFabricOrder: "Planned fabric order",
      deadline: "Deadline",
      orderNumber: "Order №",
      modelNumber: "Model №",
      client: "Client",
      bodyParts: "Body parts",
      fabricSpecification: "Fabric specification",
      color: "Color",
      quantity: "Quantity",
      fabricPerPiece: "Fabric 1 pc",
      totalFabric: "Total fabric",
      actualTotalFabric: "Actual total fabric",
      generateOrder: "Generate order",
    },
    calculations: {
      calculate: "Calculate",

      title: "Calculations",
      width: "Width m.",
      length: "Length m.",
      density: "Density kg/m²",
      productQuantity: "Product quantity 1 unit pcs.",
      overProduction: "Over production %",
      fabricAmount: "Fabric amount for 1 pc kg.",
    },
    order: {
      title: "Order",
      orderQuantity: "Order quantity",
      overProduction: "Over-production %",
      quantityToProduce: "Quantity to be producer",
      quantityCutting: "Quantity of cutting",
      remainderCutting: "Remainder of cutting",
      shippingQuantity: "Shipping quantity",
    },
    expenseGroup: {
      title: "Expense group",
      name: "Name",
      price: "Price (USD)",
      quantity: "Quantity (kg)",
      noData: "No data available",
    },
  },
  fabricOrderingBox: {
    index: {
      deliveyTime: "Delivery time",
      peachEffect: "Peach effect",
      generateOrder: "Generate fabric order",
      title: "Generated Orders",
      fabricList: "Fabric list",
      sipNumber: "Sip №",
      modelNumber: "Model №",
      fabricDesign: "Fabric design",
      queue: "Queue",
      fabricSpecification: "Fabric specification",
      color: "Color",
      status: "Status",
      supplier: "Supplier",
      actualTotalFabric: "Actual total fabric",
      actualFabricPrice: "Actual fabric price",
      actualTotalPrice: "Actual total price",
      fabricDeadline: "Fabric deadline",
      additionalAccessory: "Additional accessory",
      noData: "No data available",
      return: "Return",
      fabricsList: "Fabrics List",
      actions: "Actions",
      orderFabric: "Order Fabric",
      recievedFabric: "Actual recieve. fabric/kg",
      pricePer: "Price per kg",
      totalPrice: "Total price",
    },
    id: {
      orderNumber: "Order number",
      searchByOrderNumber: "Search by order number",
      clientName: "Client name",
      enterClientName: "Enter client name",
      creatorOfPlanning: "Creator of planning",
      enterCreatorOfPlanning: "Enter Creator of planning",
      creatorOfOrder: "Creator of order",
      enterCreatorOfOrder: "Enter Creator of order",
      modelNumber: "Model number",
      modelInput: "Model raqamini kiriting",
      orderStatus: "Order status",
      enterOrderStatus: "Enter Order status",
      createdTime: "Created time",
      enterCreatedTime: "Enter Created time",
      modelName: "Model name",
      enterModelName: "Enter Model name",
      deadlineOfOrder: "Deadline of order",
      enterDeadlineOfOrder: "Enter Deadline of order",
      creatorOfModel: "Creator of model",
      enterCreatorOfModel: "Enter Creator of model",
      plannedAccessoryExpense: "Planned Accessory expense for 1 set",
      expenseAmount: "0.00",
      headOfProductionDepartment: "Head of production department",
      enterHeadOfProductionDepartment: "Enter Head of production department",
      actualShippingDate: "Actual shipping date",
      enterActualShippingDate: "Enter Actual shipping date",
      currency: "Currency",
      save: "Save",
      accessoryPlanningChart: "Accessory planning chart",
      accessoryPlannedOrder: "Planned accessory order",
    },
  addAccessoryBox:{
    addAccessory: "Add Accessory",
    name: "Name",
    selectName: "Select Name",
    pricePerUnit: "Price per unit",
    measurementUnit: "Measurement unit",
    selectMeasurementUnit: "Select Measurement unit",
    productionQuantity: "Production quantity",
    enterProductionQuantity: "Enter production quantity",
    description: "Description",
    enterCanvasType: "Enter Fabric type",
    specification: "Specification",
    selectSpecification: "Select Specification",
    quantityPerUnit: "Quantity per unit",
    enterQuantity: "Enter Quantity",
    wastage: "Wastage",
    enterWastage: "Enter Wastage",
    accessoryPhoto: "Accessory photo",
    quantity: "Quantity",
    wastage: "Wastage",
    productionQuantity: "Production Quantity",
    totalAccessory: "Total Accessory",
    description: "Description",
    actions: "Actions",
  },
  plannedAccessoryOrderBox:{
    partnerName: "Partner name",
    deliveryTime: "Delivery time",
    deadline: "Deadline",
    orderNumber: "Order №",
    modelNumber: "Model №",
    client: "Client",
    supplierName: "Supplier name",
    accessNameSpecification: "Access name and specification",
    status: "Status",
    producing: "Producing",
    measurementUnit: "Measurement unit",
    quantityForOnePiece: "Quantity for 1 pc",
    totalAccessory: "Total accessory",
    pricePerUnit: "Price per unit",
    orderingQuantity: "Ordering quantity",
    totalPrice: "Total price",
    order: "Order",
    noDataAvailable: "No data available",
    deadlineForFabric: "Deadline for fabric",
  },

},
  samplesBox:{
    finishSample: "Finish Sample",
    samples: "Samples",
    addSample: "Add Samples",
    id: {
      orderQuantity: "Order quantity",
      createdBy: "Created by",
      createdAt: "Created ",
      updatedAt: "Updated",
      updatedBy: "Updated by",
      enterCreator: "Enter creator",
      enterModifiedPerson: "Enter modified person",
      photoSample: "Photo Sample",
      shipmentSample: "Shipment Sample",
      certificateSample: "Certificate Sample",
    },
    sampleTabs: {
      bodyPartColor: "Body part color",
      fabricSupplierName: "Fabric supplier name",
      fqsSentDate: "FQS sent date",
      result: "Result",
      reason: "Reason",
      note: "Note",
      actions: "Actions",
      addSampleInfo: "Add sample info",
      sentDate: "Request sent date",
      receivedDate: "Received date",
      option: "Option",
      commentDate: "Comment recieved date",
      chemicalProccess: "Chemical proccess",
    },
  },
  finishProcess: {
    finish: "Finish",
    completeProcess: "  Are you sure you want to complete this process?",
  },
  centralWarehouse: {
    addProduct:"Add product",
    newArrivedFabric: "New Arrived Fabric",
    productName: "Product name",
    enterProductName: "Enter product name",
    client: "Client",
    enterPartnerName: "Enter partner name",
    quantity: "Quantity",
    enterQuantity: "Enter quantity",
    description: "Description",
    enterDescription: "Enter description",
    department: "Production departments",
    sipNumber: "Sip number",
    specification: "Specification",
    enterSpecification: "Enter specification",
    price: "Price",
    currency: "USD",
    cancel: "Cancel",
    save: "Save",
    productName: "Product name",
    department: "Production departments",
    supplier: "Supplier",
    specification: "Specification",
    quantity: "Quantity",
    price: "Price",
    currency: "Currency",
    description: "Description",
    production: "Production",
    action: "Action",
    centralWarehouse: "Central warehouse",
    search: "Search",
    addNewItem: " Add New Item",
    reset: "Reset",
  },
  fabricWarehouse: {
    sipNumber: "Sip №.",
    batchNumber: "Batch №.",
    orderNumber: "Order №.",
    fabricWarehouse: "Fabric warehouse",
    fabricSpecification: "Fabric specification",
    color: "Color",
    receivedNettoWeight: "Fact received Netto weight",
    givenToCutting: "Transferred to cutting",
    fabricStock: "Fabric Stock",
    remainingQuantity: "Remaining quantity in warehouse",
    production: "Production",
    action: "Action",
    reset: "Reset",
    search: "Search",
    addArrivedFabric: " Add Arrived Fabric",
    newArrivedFabric: "New Arrived Fabric",
    sipNumber: "Sip №.",
    enterSipNumber: "Sip number",
    batchNumber: "Batch №.",
    enterBatchNumber: "Enter batch №.",
    fabricWidth: "Fabric width in fact (cm)",
    enterFabricWidth: "Enter fabric width in fact",
    density: "Density (gsm) in fact gr/m2",
    enterDensity: "Enter density (gsm) in fact",
    receivedGrossWeight: "Fact received Gross weight",
    enterReceivedGrossWeight: "Enter fact received gross weight",
    receivedNettoWeight: "Fact received Netto weight",
    enterReceivedNettoWeight: "Enter fact received netto weight",
    actualUnitPrice: "Actual unit price",
    enterActualUnitPrice: "Enter actual unit price",
    cancel: "Cancel",
    save: "Save",
    remainingQuantity: "Remaining quantity",
    pricePerUnit: "Price P/U",
    totalPrice: "Total price",
  },
  fabricStockBox: {
    newFabricStock: "New Fabric Stock",
    artNumber: "ART №",
    enterArtNumber: "Enter ART №",
    batchNumber: "Batch №",
    enterBatchNumber: "Enter batch №",
    orderNumber: "Order №",
    enterOrderNumber: "Enter Order №",
    modelNumber: "Model №",
    enterModelNumber: "Enter Model №",
    supplierName: "Supplier name",
    enterSupplierName: "Enter partner name",
    fabricSpecification: "Fabric specification",
    enterFabricSpecification: "Enter fabric specification",
    color: "Color",
    selectColor: "Select Color",
    remainingQuantity: "Remaining quantity",
    enterRemainingQuantity: "Enter remaining quantity KG",
    pantone: "Pantone",
    enterPantone: "Enter pantone code",
    pricePerUnit: "Price per unit",
    enterPricePerUnit: "Enter Price P/U",
    cancel: "Cancel",
    save: "Save",
  },
  accessoryWarehouse: {
    plannedAt: "Planned at",
    plannedBy: "Planned by",
    accessoryName: "Accessory name",
    accessoryStock: "Accessory stock",
    modelNumber: "Model №",
    supplierName: "Supplier name",
    search: "Search",
    addAccessoryStock: "Add Accessory Stock",
    orderNumber: "Order №",
    accessorySpecification: "Accessory specification",
    accessoryPhoto: "Accessory photo",
    remainingQuantity: "Remaining quantity",
    pricePerUnit: "Price P/U",
    totalPrice: "Total price",
    action: "Action",
    reset: "Reset",
    addBoxSize: "Add box size",
    boxSize: "Box size",
    size: "Size/m",
  },
  readyWarehouse: {
    index: {
      readyGarmentWarehouse: "Ready garment warehouse",
      orderNumber: "Order №",
      modelNumber: "Model №",
      clientName: "Client name",
      modelName: "Model name",
      orderQuantity: "Order quantity",
      producedQuantity: "Produced quantity",
      deadline: "Deadline",
      status: "Status",
      garmentsInStock: "Garments In Stock",
      readyGarmentIncomeWithWaybill: "Ready Garment Income With Waybill",
    },
    id: {
      modelNo: "Model №.",
      orderNo: "Order №.",
      subconName: "Subcon. name",
      createdAt: "Created ",
      rgIncomeWithWaybill: "RG income with waybill",
      waybillNo: "Waybill №.",
      branchName: "Branch name",
      createdBy: "Created by",
      action: "Action",
      addGarments: "Add Garments",
      reset: "Reset",
      search: "Search",
      internalWaybillNo: "Internal waybill №.",
      dateOfWaybill: "Date of waybill",
      enterBranchName: "Enter branch name",
      sent: "Sent",
      enterFrom: "Enter from",
      name1: "Name 1",
      givenBy: "Given by",
      enterPosition: "Enter position",
      transportationDepWorker: "Transportation dep. worker",
      receiver: "Receiver",
      enterReceiverPosition: "Enter receiver position",
      name2: "2. Name",
      transportNumber: "Transport number",
      checkedBy: "Checked by",
      enterCheckedBy: "Enter checked by",
      name: "Name",
    },
    readyGarments: {
      name: "Name",
      orderNo: "Order №.",
      modelNo: "Model №.",
      color: "Color",
      mu: "M/U",
      sizes: "Sizes",
      total: "Total",
      modelPrice: "Model price",
      modelTotalPrice: "Model total price",
      outsourcePrice: "Outsource price",
      outsourceTotalPrice: "Outsource total price",
      boxQuantity: "Box quantity",
      clientName: "Client name",
      action: "Action",
      noDataAvailable: "No data available",
    },
    addReadyGarment: {
      title: "Add Ready Garment",
      modelNumber: "Model number",
      goodAndProductsName: "Good and products name",
      color: "Color",
      totalQuantity: "Total quantity",
      outsourcePrice: "Outsource Price",
      boxQuantity: "Box quantity",
      enterName: "Enter name",
      enterQuantity: "Enter quantity",
      enterBoxQuantity: "Enter box quantity",
      cancel: "Cancel",
      save: "Save",
      name: "Name",
      orderNo: "Order №.",
      modelNo: "Model №.",
      color: "Color",
      mu: "M/U",
      sizes: "Sizes",
      total: "Total",
      modelPrice: "Model price",
      modelTotalPrice: "Model total price",
      outsourcePrice: "Outsource price",
      outsourceTotalPrice: "Outsource total price",
      boxQuantity: "Box quantity",
      clientName: "Client name",
      action: "Action",
      noDataAvailable: "No data available",
      readyGarments: "Ready Garments",
    },
    documents: {
      title: "Documents",
      type: "Type",
      documentName: "Document name",
      description: "Description",
      uploader: "Uploader",
      date: "Date",
      actions: "Actions",
      uploadDocument: "Upload Document",
      noDataAvailable: "No data available",
    },
    addDocument: {
      uploadDocument: "Select document",
      title: "Enter document name",
      description: "Enter description",
      cancel: "Cancel",
      save: "Save",
    },
    readyGarmentWarehouse: {
      title: "Ready Garment Warehouse",
      add: "Add",
      orderNumber: "Order number",
      modelNumber: "Model number",
      modelName: "Model name",
      clientName: "Client name",
      fabricSpecification: "Fabric specification",
      season: "Season",
      gender: "Gender",
      deadline: "Deadline",
      orderQuantity: "Order quantity",
      orderDate: "Order date",
    },

    productDetails: {
      color: "Color",
      producedTotal: "Produced total",
      realPrice: "Real price",
      totalSoldAmount: "Total sold amount",
    },
    garmentsOfStock: {
      modelNumber: "Model number",
      modelName: "Model name",
      fromDate: "From date",
      toDate: "To date",
      title: "Garments of Stock",
      price: "Price",
      productionQuantity: "Production quantity",
      remainingQuantity: "Remaining quantity",
      addedAt: "Added at",
      addedBy: "Added by",
      action: "Action",
      addGarments: "Add Garments",
      search: "Search",
      calculation: "Calculation",
      sizes: "Sizes",
      quantitiesBySizes: "Quantities By Sizes",
      modelPhoto: "Model Photo",
      documents: "Documents",
      selling: "Selling",
    },
    pricingPage: {
      costPrice: "Cost price",
      profit: "Profit",
      sellingPrice: "Selling price",
      factSellingPrice: "Fact selling price",
      actions: "Actions",
    },
    measurementList: {
      title: "Measurement List",
      sizeTemplate: "Size template",
      no: "№.",
      code: "Code",
      sizeName: "Size name",
      gradation: "Graduation",
      tolerance: "Tolerance",
      shrinkage: "Shrinkage",
      comment: "Comment",
      creator: "Creator",
      date: "Date",
      actions: "Actions",
      sizeChart: "Size Chart",
    },
    quantityBySizes: {
      title: "Quantity by Sizes",
      mainColor: "Main color",
      colorCode: "Color code",
      total: "Total",
      price: "Price",
      totalPrice: "Total price",
      actions: "Actions",
      addRow: "Add Row",
    },
  },
  wastes: {
    addWastes: {
      title: "Add Wastes",
      nameOfWastes: "Enter name of wastes",
      modelNo: "Select model №",
      wastesQuantity: "Enter quantity",
      sellingPrice: "Enter price",
      cancel: "Cancel",
      create: "Create",
    },
    wastesWarehouse: {
      modelNo: "Model №.",
      wastesName: "Wastes name",
      from: "From",
      to: "To",
      title: "Wastes Warehouse",
      no: "No.",
      nameOfWastes: "Name of wastes",
      batchNumber: "Batch number",
      modelNo: "Model №.",
      mu: "M/U",
      price: "Price",
      currency: "Currency",
      beginOfPeriodQty: "Begin. of period (qty)",
      beginOfPeriodPrice: "Begin. of period (price)",
      totalInputQty: "Total input qty",
      totalInputPrice: "Total input price",
      totalOutputQty: "Total output qty",
      totalOutputPrice: "Total output price",
      remainingQty: "Remaining qty",
      remainingTotalPrice: "Remaining total price",
      reset: "Reset",
      search: "Search",
      addWastes: "Add Wastes",
      actions: "Actions",
    },
  },
  supplyWarehouse: {
    modelNo: "Model №.",
    orderNo: "Order №.",
    subconName: "Subcontractor name",
    status: "Status",
    title: "Supply Warehouse",
    incomeFrom: "Income from",
    orderNoHeader: "Order №.",
    mainColor: "Main color",
    artWork: "Art work",
    sizeName: "Size name",
    totalQuantity: "Total quantity",
    servicePricePerWork: "Service price per work",
    orderDeadline: "Order deadline",
    branchName: "Branch/subcontractor name",
    sentDate: "Sent date",
    action: "Action",
    reset: "Reset",
    search: "Search",
    waybill: "Waybill",
  },
  waybills: {
    modelNo: "Model №.",
    waybillNo: "Waybill №.",
    subconName: "Subcon. name",
    from: "From",
    to: "To",
    reset: "Reset",
    search: "Search",
    title: "Waybills",
    orderNo: "Order №.",
    branchName: "Branch name",
    sentDate: "Sent date",
    creator: "Creator",
    action: "Action",
    addWaybill: "Add Waybill",
  },
  waybillId: {
    waybillNo: "Waybill №",
    branchName: "Branch/subcontractor name",
    branchAddress: "Address of branch/subcontractor",
    date: "Date of waybill",
    creator: "Creator",
    createdAt: "Created ",
    updatedAt: "Updated ",
    save: "Save",
    waybills: "Waybills",
    no: "№",
    modelNo: "Model №",
    name: "Name",
    color: "Color",
    mu: "M/U",
    sample: "Sample",
    totalQuantities: "Total quantities",
    price: "Price",
    totalPrice: "Total price",
    add: "Additon",
    noDataAvailable: "No data available",
  },
  waybillForm: {
    description: "Description",
    enterDescription: "Enter description",
    senderSide: "Sender Side",
    givenBy: "Given By",
    receiverInFactory: "Receiver in Factory",
    confirmedBy: "Confirmed by",
    allowedBy: "Allowed by",
    receiverSide: "Receiver Side",
    receivedBy: "Received by",
    enterPosition: "Enter position",
    enterName: "Enter Name",
    downloadPdf: "Download PDF",
    save: "Save",
  },
  secondaryWarehouse: {
    index: {
      modelNo: "Model №",
      orderNo: "Order №",
      from: "From",
      reset: "Reset",
      search: "Search",
      title: "Secondary Warehouse",
      waybillNo: "Waybill №",
      twoSortQuantity: "2-sort quantity",
      overproductionsQuantity: "Overproductions quantity",
      sewedBy: "Sewed by",
      createdBy: "Created by",
      createdAt: "Created ",
      action: "Action",
      addGarments: "Add Garments",
    },
    waybill: {
      internalWaybillNo: "Internal waybill №",
      dateOfWaybill: "Date of waybill",
      sentFrom: "Sent from",
      name1: "Name 1",
      givenBy1: "1. Given by",
      givenBy2: "2. Given by",
      transportationWorker: "Transportation dep. worker",
      receiver: "1. Receiver",
      transportNumber: "Transport number",
      checkedBy: "Checked by",
      enterBranchName: "Enter branch name",
      enterName: "Enter name",
      enterPosition: "Enter position",
      enterTransportationWorker: "Enter transportation worker",
      enterReceiverPosition: "Enter receiver position",
      enterTransportNumber: "Enter transport number",
      enterReceiverName: "Enter receiver name",
      enterCheckedBy: "Enter checked by",
      save: "Save",
    },
    overproductions: {
      title: "Overproductions",
      twoSort: "2-Sort",
      documents: "Documents",
      domesticMarketSales: "Domestic Market Sales",
      name: "Name",
      orderNo: "Order №",
      modelNo: "Model №",
      color: "Color",
      mu: "M/U",
      sizes: "Sizes",
      total: "Total",
      price: "Price",
      totalPrice: "Total price",
      action: "Action",
      addOverproduction: "Add Overproduction",
    },
    addOverproduction: {
      title: "Add OverProduction",
      modelNumber: "Model number",
      goodAndProductsName: "Good and products name",
      color: "Color",
      totalQuantity: "Total quantity",
      price: "Price",
      enterModelName: "Enter name",
      enterQuantity: "Enter quantity",
      save: "Save",
      cancel: "Cancel",
    },
    domestic: {
      type: "Type",
      color: "Color",
      pricePerUnit: "Price per unit",
      measurementUnit: "Measurement unit",
      sizes: "Sizes",
      totalQuantity: "Total quantity",
      totalPrice: "Total price",
      buyer: "Buyer",
      soldDate: "Sold date",
      description: "Description",
    },
    productionProcesses: "Production processes for current model",
  },
  production: {
    waybills: {
      waybillNo: "Waybill №",
      modelNo: "Model №",
      from: "From",
      to: "To",
      reset: "Reset",
      search: "Search",
      waybills: "Waybills",
      orderNo: "Order №",
      branchName: "Branch Name",
      sentDate: "Sent Date",
      creator: "Creator",
      action: "Action",
      addWaybill: "Add Waybill",
      noDataAvailable: "No data available",
      internalWaybillNo: "Internal waybill №",
      waybillDate: "Waybill date",
      sendingFrom: "Sending from",
      givenBy: "Given by",
      transportNumber: "Transport number",
      transportationWorker: "Transportation dep. worker",
      receiver: "Receiver",
      checkedBy: "Checked by",
      creator: "Creator",
      createdAt: "Created ",
      enterWaybillNo: "Enter waybill №",
      enterSenderFrom: "Enter sender from",
      enterPosition: "Enter position",
      enterTransportNumber: "Enter transport number",
      enterReceiverName: "Enter receiver name",
      save: "Save",
    },
    oneSort: {
      oneSort: "1-Sort",
      twoSort: "2-Sort",
      name: "Name",
      orderNo: "Order №",
      modelNo: "Model №",
      color: "Color",
      mu: "M/U",
      sizes: "Sizes",
      total: "Total",
      outsourcePrice: "Outsource Price",
      totalPrice: "Total Price",
      boxQuantity: "Box Quantity",
      clientName: "Client Name",
      noDataAvailable: "No data available",
      generatePdf: "Generate PDF",
    },
  },
  shipping: {
    index: {
      invoiceNo: "Invoice №",
      clientName: "Client name",
      shippingDate: "Shipping date",
      shipping: "Shipping",
      invoiceAmount: "Invoice Amount",
      netWeight: "Net weight, kg",
      grossWeight: "Gross weight, kg",
      shippedDate: "Shipped date",
      reset: "Reset",
      search: "Search",
      addShipping: "Add Shipping",
    },
    id: {
      invoiceNo: "Invoice №",
      invoiceDate: "Invoice date",
      buyerName: "Buyer name",
      buyerAddress: "Buyer address",
      contractNo: "Contract №",
      contractDate: "Contract date",
      sellerName: "Seller name",
      sellerAddress: "Seller address",
      senderCompany: "Sender company",
      senderCompanyAddress: "Sender company address",
      receiverName: "Receiver name",
      receiverAddress: "Receiver address",
      countryOfOrigin: "Country of origin",
      manufacturer: "Manufacturer",
      creatorName: "Creator name",
      enterInvoiceNo: "Enter the invoice №",
      enterPartnerName: "Enter partner name",
      enterCreatorName: "Enter creator name",
      selectSenderCompany: "Select the sender company",
      selectCountryOfOrigin: "Select the country of origin",
      selectManufacturer: "Select the manufacturer name",
      selectSellerName: "Select the seller name",
      selectReceiverName: "Select the receiver name",
      save: "Save",
      shippingModels: "Shipping Models",
      packingList: "Packing List",
      invoice: "Invoice",
      generateInvoice: "Generate Invoice",
    },
    invoice: {
      no: "№",
      orderNo: "Order №",
      modelNo: "Model №",
      brandName: "Brand name",
      deliveryTerms: "Delivery terms",
      paymentTerms: "Payment terms",
      typeOfPackaging: "Type of packaging",
      letterOfCreditNo: "Letter of credit №",
      totalNetWeight: "Total net weight (Kg.)",
      totalGrossWeight: "Total gross weight",
      totalBoxPlacesQuantity: "Total box places quantity (pcs)",
      bankInformation: "Bank information",
      bankName: "Bank name",
      bankAddress: "Bank address",
      bankCode: "Bank code",
      swift: "SWIFT",
      bankAccountNumbers: "Bank account numbers",
      bankAccountNumberUSD: "Bank account number (USD)",
      bankAccountNumberRUB: "Bank account number (RUB)",
      bankAccountNumberUZS: "Bank account number (UZS)",
      noDataAvailable: "No data available",
    },
  },

  statusItems: {
    in_process: "In process",
    empty: "Empty",
    finished: "Finished",
    planned: "Planned",
    not_planned: "Not_planned",
    generated_fabric: "Generate_fabric",
    active: "Active",
    disabled: "Disabled",
    pending: "Pending",
    ordered: "Ordered",
    received: "Received",
    cancelled: "Cancelled",
  },
  spending: {
    history: "History",
    date: "Date",
    spendingFabric: "Spending fabric",
    spendingQuantity: "Spending quantity",
    toSipNo: "To Sip №",
    toBatchNo: "To Batch №",
    doneBy: "Done by",
    warehouseOperations: "Warehouse operations",
    operationId: "Operation ID",
    quantity: "Quantity",
    fabricGivingToOwnWorkshop: "Fabric giving to own workshop",
    givingFabricQuantity: "Giving fabric quantity",
    fabricGivingToSubcontractor: "Fabric giving to subcontractor",
    deleteFabricWarehouseRow: "Delete fabric warehouse row",
    areYouSureYouWantToDeleteFabricWarehouseRow:
      "Are you sure you want to delete fabric warehouse row?",
  },
  alertText:"Please select at least one item to place an order",
  calculationStatus:{
     title: "Prices",
    costSubtotal: "Cost subtotal",
    overproduction: "Overproduction %",
    lostResource: "Lost resource %",
    generalExpenses: "General expenses %",
    extraExpenses: "Extra expenses %",
    costPrice: "Cost price",
    targetProfit: "Target profit %",
    clientTargetPrice: "Client target price",
    givenPrice: "Given price",
    discount: "Discount %",
    priceWithDiscount: "Price with discount",
    actualProfit: "Actual profit %",
    actualProfitAmount: "Actual profit amount",
    soldPrice: "Sold price",
  },
  bankDetails:{
    table:{
      bankName: "Bank name",
      bankCode: "Bank code",
      bankAddress: "Bank address",
      currency: "Currency",
      accountNumber: "Account number",
      created: "Created",
      createdBy: "Created by",
      actions: "Actions",
    },
    dialog:{
      bankCode: "Bank code (MFO)",
      swift: "SWIFT",
      updateBankDetails:"Update Bank details"
    },
    cancel: "Cancel",
    save: "Save",
    update: "Update",
  },
  listOfWorkers:{
    headers:{
      name:"Employee name",
      lastname:"Employee's last name",
      sallary:"Salary calculation procedure",
      contact:"Contact",
      status:"Status",
      actions:"Actions"
    },
    filter:{
      firstName:"First name",
      lastName:"Last name",
      contact:"Contact",
      paymentType:"Payment type",
    },
    dialog:{
      birthDate:"Date of birth: year/month/day",
      background:"Education",
      address:"Address",
      hiredDate:"Hired date",
      speciality:"Speciality",
      firedDate:"Fired date",
      paymentType:"Payment type",
      fixed:"Fixed",
      donabay:"Per work",
    },
    fired:"Fired",
    working:"Currently working",
  },
  warehouseId:{
   spend:"Spend",
   history:"History",
   workShop:"Workshop",
   subcontractor:"Subcontractor",
   stock:"Stock",
   supplier: "Supplier",
   deliveredFactQuantity: "Delivered fact quantity",
   name:"Name",
   specification: "Specification",
   quantity: "Quantity",
   remainingQuantity: "Remaining quantity",
   pricePerUnit: "Price per unit",
   totalPrice:"Total price",
   orderedDate: "Ordered date",
   actions: "Actions",
   accessoryGivingWork:"Accessory giving to own workshop",
   accessoryGivingSub:"Accessory giving to subcontractor",
   areYouSure:"Are you sure?",
   want:"You want to giving the current accessory to accessory stock?",
   givingStock:"Giving to stock",
   orderedQuantity:"Ordered quantity",
   deliveredQuantity:"Delivered quantity",
   spentQuantity:"Spent quantity",
   perUnitPrice:"Price per unit",
   deleteStock:"Delete accessory stock row",
   wantToDelete:"Are you sure you want to delete this accessory stock row?",

  },
  modelOperations:{
    modelOperation: "Model operation",
    operationName:"Operation name",
    enterOperationName:"Enter operation name",
    description: "Description",
    enterDescription:"Enter description",
    createdAt:"Created at",
    creator: "Creator",
    laborCost:"Labor cost",
    operationExpense:"Operation expense",
    totalIn:"Total in",
  }
};
